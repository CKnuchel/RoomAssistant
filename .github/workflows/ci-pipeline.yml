name: ci-pipeline

on: 
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v2

  lint:
    name: Perform lint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run lint
        run: ./gradlew lintDebug

      - name: Upload html lint report
        uses: actions/upload-artifact@v4
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html


  unit-test:
    name: Perform Unit Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Verwende die Temurin-Distribution
          java-version: '17'

      - name: Run tests
        run: ./gradlew test

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: unit_test_report
          path: app/build/reports/test/testDebugUnitTest/

  instrumentation-test:
    name: Perform Instrumentation Testing
    runs-on: macos-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up Java JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30  # Verwende API 30 für mehr Stabilität
          target: default
          profile: Nexus 6
          emulator-options: -no-snapshot -no-boot-anim
          script: ./gradlew connectedCheck

      - name: Upload Instrumentation Test report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected


  static-code-analysis:
    name: Perform static code analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up Java JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: SonarCloud Scan  # Nutzt sonarcloud properties in gradle.properties
        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  debug-apk:
    name: Generate Debug APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up Java JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: sample-app.apk
          path: app/build/outputs/apk/debug/app-debug.apk
